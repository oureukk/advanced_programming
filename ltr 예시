#include <stdio.h>

// Left-to-Right Modular Exponentiation
unsigned long long modular_exponentiation(unsigned long long base, unsigned long long exponent, unsigned long long mod) {
    unsigned long long result = 1;        // 초기 결과
    unsigned long long current_base = base % mod; // base를 mod로 나눈 값으로 시작

    while (exponent > 0) {
        // 현재 비트가 1이면 결과에 현재 base를 곱함
        if (exponent & (1ULL << (sizeof(unsigned long long) * 8 - 1))) { // 최상위 비트 검사
            result = (result * current_base) % mod;
        }
        current_base = (current_base * current_base) % mod; // base 제곱
        exponent <<= 1; // 왼쪽으로 시프트 (Left-to-Right 방식)
    }

    return result;
}

int main() {
    unsigned long long base, exponent, mod;

    // 사용자 입력
    printf("Enter base: ");
    scanf("%llu", &base);
    printf("Enter exponent: ");
    scanf("%llu", &exponent);
    printf("Enter modulus: ");
    scanf("%llu", &mod);

    // 결과 계산
    unsigned long long result = modular_exponentiation(base, exponent, mod);

    // 결과 출력
    printf("Result: %llu\n", result);
    return 0;
}
